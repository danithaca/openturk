<?php

/**
 * @file
 *   AMT Analysis module file
 */

/**
 * Implements hook_mt_operations().
 * This hook is for mt_task related modules.
 */
function mt_analysis_mt_operations() {
  return array(
    'mturk' => array(
      'ComputeAll' => array(
        'title' => 'Compute results',
        'description' => 'Compute statistics and results for this AMT task based on the assignments loaded.',
      ),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function mt_analysis_menu() {
  return array(
    'node/%/mt_analysis' => array(
      'title' => 'AMT Results',
      'description' => 'Stats and results of this AMT task.',
      'page callback' => 'mt_analysis_display_results',
      'page arguments' => array(1),
      'access callback' => 'mt_task_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
      'weight' => 11,
    ),
    'node/%/mt_analysis/majority.csv' => array(
      'description' => 'Download results in CSV format, using the majority voting algorithm.',
      'page callback' => 'mt_analysis_csv_majority',
      'page arguments' => array(1),
      'access callback' => 'mt_task_access',
      'access arguments' => array(1),
      'type' => MENU_CALLBACK,
    ),
    'node/%/mt_analysis/json/%' => array(
      'description' => 'Download all results in JSON format.',
      'page callback' => 'mt_analysis_json',
      'page arguments' => array(1),
      'access callback' => 'mt_analysis_program_access',
      'access arguments' => array(1, 4),
      'type' => MENU_CALLBACK,
    ),
  );
}


function mt_analysis_get_results($task_id) {
  $results = NULL;
  $row = db_query('SELECT results_json, access_key, updated FROM {mt_analysis} WHERE task_id=:task_id', array(':task_id' => $task_id))->fetchAssoc();
  if ($row) {
    $results = drupal_json_decode($row['results_json'], TRUE);
    $results['json'] = $row['results_json'];
    $results['updated'] = $row['updated'];
    $results['access_key'] = $row['access_key'];
    global $base_root;
    $results['json_url'] = $base_root . request_uri() . '/json/' . $row['access_key'];
    $results['csv_majority'] = $base_root . request_uri() . '/majority.csv';
  }
  return $results;
}


function mt_analysis_display_results($task_id) {
  $results = mt_analysis_get_results($task_id);
  $variables = array();
  $variables['results'] = $results;
  return theme('mt_analysis_results', $variables);
}


function mt_analysis_json($task_id) {
  $results = mt_analysis_get_results($task_id);
  drupal_add_http_header('Content-Type', 'application/json');
  if ($results) {
    echo $results['json'];
  }
  else {
    echo drupal_json_encode(array('message' => t('No results.')));
  }
}

function mt_analysis_csv_majority($task_id) {
  $results = mt_analysis_get_results($task_id);
  drupal_add_http_header('Content-Type', 'plain/text');
  if ($results) {
    $results_majority = $results['results_majority'];
    $lines = array();
    $header = array('hit_id', 'annotation_id', 'combined_answers', 'majority_answer');
    $lines[] = implode(',', $header);
    foreach ($results_majority as $line) {
      $fields = array();
      foreach ($line as $field) {
        $fields[] = '"'. str_replace('"', '""', $field) .'"';
      }
      $lines[] = implode(',', $fields);
    }
    echo implode("\n", $lines);
  }
  else {
    echo t('No results.');
  }
}

function mt_analysis_program_access($task_id, $access_key) {
  if (strlen($access_key) != 10) {
    return FALSE;
  }
  $results = mt_analysis_get_results($task_id);
  if ($results != NULL && isset($results['access_key']) && $results['access_key'] == $access_key) {
    return TRUE;
  }
  return FALSE; // default return false.
}

/**
 * Implements hook_theme().
 */
function mt_analysis_theme($existing, $type, $theme, $path) {
  return array(
    'mt_analysis_results' => array(
      'variables' => array(
        'results' => NULL,
      ),
      'template' => 'mt_analysis_results',
    ),
  );
}